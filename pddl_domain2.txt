(define (domain automation_production)
	(:predicates  
		(not_busy ?location)(is_busy ?location)(robotAt ?location)
		(start ?location)(end ?location)
		(neighbor ?location1 ?location2)(neighbor ?location2 ?location1)(neighbor ?location2 ?location3)(neighbor ?location3 ?location2)(neighbor ?location3 ?location4)(neighbor ?location4 ?location3)
		(location1 ?location1)(location2 ?location2)(location3 ?location3)(location4 ?location4)
		(n2n3 ?location ?obj)(y2n3 ?location ?obj)(y3n2 ?location ?obj)(y2y3 ?location ?obj))

	(:action move_onload12
	:parament(obj ?obj,location ?source,location ?dst)
	:precondition(and(at start(n2n3 ?source ?obj))(at start(robotAt ?source))(at start (is_busy ?source))(at start(not (is_busy ?dst)))(at start(location1 ?source))(at start(location2 ?dst)))
	:effect(and (at end(n2n3 ?dst ?obj))(at end(robotAt ?dst))(at end(is_busy ?dst))(at start(location1 ?source))(at start(location2 ?dst))
	                  (at start(not (n2n3 ?source ?obj)))(at start(not (robotAt ?source)))(at start(not (is_busy ?source)))
		)
	)

	(:action move_onload13
	:parament(obj ?obj,location ?source,location ?dst)
	:precondition(and(at start(n2n3 ?source ?obj))(at start(robotAt ?source))(at start (is_busy ?source))(at start(not (is_busy ?dst)))(at start(location1 ?source))(at start(location3 ?dst)))
	:effect(and (at end(n2n3 ?dst ?obj))(at end(robotAt ?dst))(at end(is_busy ?dst))(at start(location1 ?source))(at start(location3 ?dst))
	                  (at start(not (n2n3 ?source ?obj)))(at start(not (robotAt ?source)))(at start(not (is_busy ?source)))
		)
	)
	(:action move_onload23
	:parament(obj ?obj,location ?source,location ?dst)
	:precondition(and(at start(y2n3 ?source ?obj))(at start(robotAt ?source))(at start (is_busy ?source))(at start(not (is_busy ?dst)))(at start(location2 ?source))(at start(location3 ?dst)))
	:effect(and (at end(y2n3 ?dst ?obj))(at end(robotAt ?dst))(at end(is_busy ?dst))(at start(location2 ?source))(at start(location3 ?dst))
	                  (at start(not (y2n3 ?source ?obj)))(at start(not (robotAt ?source)))(at start(not (is_busy ?source)))
		)
	)
	(:action move_onload32
	:parament(obj ?obj,location ?source,location ?dst)
	:precondition(and(at start(y3n2 ?source ?obj))(at start(robotAt ?source))(at start (is_busy ?source))(at start(not (is_busy ?dst)))(at start(location3 ?source))(at start(location2 ?dst)))
	:effect(and (at end(y3n2 ?dst ?obj))(at end(robotAt ?dst))(at end(is_busy ?dst))(at start(location3 ?source))(at start(location2 ?dst)))
	                  (at start(not (y3n2 ?source ?obj)))(at start(not (robotAt ?source)))(at start(not (is_busy ?source)))
		)
	)
	(:action move_onload34
	:parament(obj ?obj,location ?source,location ?dst)
	:precondition(and(at start(y2y3 ?source ?obj))(at start(robotAt ?source))(at start (is_busy ?source))(at start(not (is_busy ?dst)))(at start(location3 ?source))(at start(location4 ?dst)))
	:effect(and (at end(y2y3 ?dst ?obj))(at end(robotAt ?dst))(at start(not (is_busy ?source)))(at end(is_busy ?dst))(at start(location3 ?source))(at start(location4 ?dst))
	                  (at start(not (y2y3 ?source ?obj)))(at start(not (robotAt ?source)))
		)
	)
	(:action move_onload24
	:parament(obj ?obj,location ?source,location ?dst)
	:precondition(and(at start(y2y3 ?source ?obj))(at start(robotAt ?source))(at start (is_busy ?source))(at start(not (is_busy ?dst)))(at start(location2 ?source))(at start(location4 ?dst)))
	:effect(and (at end(y2y3 ?dst ?obj))(at end(robotAt ?dst))(at start(not (is_busy ?source)))(at end(is_busy ?dst))(at start(location2 ?source))(at start(location4 ?dst))
	                  (at start(not (y2y3 ?source ?obj)))(at start(not (robotAt ?source)))
		)
	)
	(:action feed
	:parament(obj ?obj,location ?source)
	:precondition(and(at start(not (is_busy ?source)))(at start(start ?source))(at start(location1 ?source)))
	:effect(and (at end(n2n3 ?source ?obj))(at start(location1 ?source))
	                  (at end(is_busy ?source))(at start(not (start ?source)))
		)
	)

	(:action processing1
	:parament(obj ?obj,location ?source)
	:precondition(and(at start(n2n3 ?source ?obj))(at start(location2 ?source)))
	:effect(and (at end(y2n3 ?source ?obj))(at start(location2 ?source))
	   		(at start(not (n2n3 ?source ?obj)))
		)
	)
	(:action processing2
	:parament(obj ?obj,location ?source)
	:precondition(and(at start(y3n2 ?source ?obj))(at start(location2 ?source)))
	:effect(and (at end(y2y3 ?source ?obj))(at start(location2 ?source))
	   		(at start(not (y3n2 ?source ?obj)))
		)
	)
	(:action assembly1
	:parament(obj ?obj,location ?source)
	:precondition(and(at start(n2n3 ?source ?obj))(at start(location3 ?source)))
	:effect(and (at end(y3n2 ?source ?obj))(at start(location3 ?source))
	   	(at start(not (n2n3 ?source ?obj)))
		)
	)
	(:action assembly2
	:parament(obj ?obj,location ?source)
	:precondition(and(at start(y2n3 ?source ?obj))(at start(location3 ?source)))
	:effect(and (at end(y2y3 ?source ?obj))(at start(location3 ?source))
	   		(at start(not (y2n3 ?source ?obj)))
		)
	)
	(:action sort
	:parament(obj ?obj,location ?source)
	:precondition(and(at start(y2y3 ?source ?obj))(at start(location4 ?source))(at start(is_busy ?source)))
	:effect(and (at end(end loc4))(at start(not (is_busy ?source)))(at start(not (y2y3 ?source ?obj)))(at start(location4 ?source))
		)
	)
	(:action move_unload
	:parament(location ?source,location ?dst)
	:precondition(and(at start(robotAt ?source))(at start(neighbor ?source ?dst)))
	:effect(and (at end(robotAt ?dst))(at start(not (robotAt ?source)))(at start(neighbor ?source ?dst))
		)
	)
)